library(pracma)
buckets <- unique(data$bucket)
epidemic_size_df <- data.frame(bucket <- buckets)
for (i in 1:length(buckets)){
sample_data <- data[data$bucket==buckets[i],]
#relevant extra info
epidemic_size_df$temp[i] <- as.character(sample_data$temp[1])
epidemic_size_df$community[i] <- as.character(sample_data$community[1])
epidemic_size_df$treatment[i] <- as.character(sample_data$treatment[1])
#now try to actually integrate
epidemic_size_df$epidemic_size[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$daphnia_prev)))
epidemic_size_df$epidemic_size_ind[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$daphnia_inf)))
#add cerio in
epidemic_size_df$epidemic_size_c[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$cerio_prev)))
epidemic_size_df$epidemic_size_ind_c[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$cerio_inf)))
}
epidemic_size_df %<>% rename(bucket = bucket....buckets)
#load in data and packages
library(tidyverse)
library(magrittr)
library(ggnewscale)
library(lubridate)
#load in data
setwd("~/Documents/GitHub/2022-thermal-zoop-experiments")
epidemic_size<-read.csv("epidemic_size_over_time.csv")
library(ggplot2)
View(epidemic_size)
ggplot(epidemic_size,aes(x=sample_date,y=epidemic_size,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()
ggplot(epidemic_size,aes(x=sample_date,y=epidemic_size,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
epidemic_size$sample_date <-mdy(epidemic_size$sample_date)
library(ggplot2)
ggplot(epidemic_size,aes(x=sample_date,y=epidemic_size,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
ggplot(filter(epidemic_size,community=="DM"|community=="DCM"),aes(x=sample_date,y=epidemic_size,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
ggplot(filter(epidemic_size_ind,community=="DM"|community=="DCM"),aes(x=sample_date,y=epidemic_size,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
ggplot(filter(epidemic_size,community=="DM"|community=="DCM"),aes(x=sample_date,y=epidemic_size_ind,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
#cerio plots
ggplot(filter(epidemic_size,community=="DM"|community=="DCM"),aes(x=sample_date,y=epidemic_size_c,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
#cerio plots
ggplot(filter(epidemic_size,community=="CM"|community=="DCM"),aes(x=sample_date,y=epidemic_size_c,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
ggplot(filter(epidemic_size,community=="CM"|community=="DCM"),aes(x=sample_date,y=epidemic_size_ind_c,color=temp))+
geom_point()+
facet_wrap(.~community)+
theme_bw()+
geom_line(aes(group=bucket))
library(ggplot2)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
epidemic_size_df_ot <- filter(epidemic_size_df,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(treatment) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(epidemic_size_df_ot)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
summary_ep_ot <- filter(epidemic_size,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(treatment,sample_date) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(epidemic_size_df_ot)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
summary_ep_ot <- filter(epidemic_size,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(sample_date,treatment) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(epidemic_size_df_ot)
#load in data
setwd("~/Documents/GitHub/2022-thermal-zoop-experiments")
epidemic_size<-read.csv("epidemic_size_over_time.csv")
epidemic_size$sample_date <-mdy(epidemic_size$sample_date)
library(ggplot2)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
summary_ep_ot <- filter(epidemic_size,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(sample_date,treatment) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(epidemic_size_df_ot)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
summary_ep_ot <- filter(epidemic_size,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(sample_date) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(epidemic_size_df_ot)
#now make summary plots
#summary data frame - removing buckets that fell to 0 density
summary_ep_ot <- filter(epidemic_size,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>%
group_by(sample_date,treatment) %>%
summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
View(summary_ep_ot)
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size-se_epidemic_size,ymax=mean_epidemic_size+se_epidemic_size)) +
ylab("daphnia epidemic size (prevalence days)")
#infected individuals
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size_ind,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_ind-se_epidemic_size_ind,ymax=mean_epidemic_size_ind+se_epidemic_size_ind)) +
ylab("daphnia epidemic size (total inf individuals)")
castilleja<-read.csv("Castilleja.csv")
head(castilleja)
#Convert to long format so cover for each species is in a single column and the species ID is in a another column
library(tidyverse)
library(magrittr)
castilleja<-transform(castilleja,Erigeron.Speciosus=as.numeric(Erigeron.Speciosus))
castilleja %<>% pivot_longer(cols = Castilleja.miniata:Stipa.richardsonii,
names_to = "species",
values_to = "cover")
#Graph changes in cover over time for each plot type
library(ggplot2)
ggplot(filter(castilleja,cover>=0.2),aes(x = Time, y = cover, color = species)) +
geom_point() +
geom_line(aes(group=interaction(species,Plot.1))) +
theme_bw() +
facet_wrap(.~Treatment)
castilleja<-read.csv("Castilleja.csv")
setwd("~/Documents/GitHub/castilleja-JCA-RMBL")
castilleja<-read.csv("Castilleja.csv")
head(castilleja)
#Convert to long format so cover for each species is in a single column and the species ID is in a another column
library(tidyverse)
library(magrittr)
castilleja<-transform(castilleja,Erigeron.Speciosus=as.numeric(Erigeron.Speciosus))
castilleja %<>% pivot_longer(cols = Castilleja.miniata:Stipa.richardsonii,
names_to = "species",
values_to = "cover")
#Graph changes in cover over time for each plot type
library(ggplot2)
ggplot(filter(castilleja,cover>=0.2),aes(x = Time, y = cover, color = species)) +
geom_point() +
geom_line(aes(group=interaction(species,Plot.1))) +
theme_bw() +
facet_wrap(.~Treatment)
#Look at data for non-Erigeron sp becauses Erigeron has the highest cover in most plots
ggplot(filter(castilleja,species!="Erigeron.Speciosus"),aes(x = Time, y = cover, color = species)) +
geom_point() +
geom_line(aes(group=interaction(species,Plot.1))) +
theme_bw() +
facet_wrap(.~Treatment)
#Look at just Castilleja
ggplot(filter(castilleja,species=="Castilleja.miniata"),aes(x = Time, y = cover, color = species)) +
geom_point() +
geom_line(aes(group=interaction(species,Plot.1))) +
theme_bw() +
facet_wrap(.~Treatment)
#Look at percent change in each of the treatments
#Summarize cover of each species by treatment group in each year
cover_summary <- castilleja %>% group_by(Treatment, Time, species) %>% summarize(mean_cover = mean(cover),
se_cover = sqrt(var(cover,na.rm=T)/n()),
number = length(cover),
ID = paste(Treatment,Time,species,sep="-"))
#Remove duplicated lines
cover_summary %<>% distinct(ID,.keep_all=TRUE)
#Look at functional groups in each plot type between the two years
#read in sheet with functional group information
castilleja_fx<-read.csv("castilleja_cover_fx_group.csv")
#join to cover data
castilleja_ed <- left_join(castilleja,castilleja_fx,by="species")
#summarize cover by functional group
cover_fx <- castilleja_ed %>% group_by(Treatment, Time, fx_group) %>% summarize(mean_cover = mean(cover,na.rm=T),
se_cover = sqrt(var(cover,na.rm=T)/n()),
ID = paste(Treatment,Time,fx_group,sep = "-"))
#remove all duplicated lines
cover_fx %<>% distinct(ID,.keep_all=TRUE)
ggplot(cover_fx,aes(x=Time,y=mean_cover,color=fx_group)) +
geom_point() +
geom_line(aes(group=fx_group)) +
theme_bw() +
facet_wrap(.~Treatment) +
geom_pointrange(aes(ymin=mean_cover-se_cover,ymax=mean_cover+se_cover))
#look at functional groups
ggplot(cover_fx,aes(x=Time,y=mean_cover,color=Treatment)) +
geom_point() +
geom_line(aes(group=Treatment)) +
theme_bw() +
facet_wrap(.~fx_group,scales="free") +
geom_pointrange(aes(ymin=mean_cover-se_cover,ymax=mean_cover+se_cover))
#Looking at total cover
total_cover <- castilleja_ed %>% group_by(Time,Treatment) %>% summarize(mean_total_cover = mean(Total.cover,na.rm=T),
total_cover_se = sqrt(var(Total.cover,na.rm=T)/n()),
ID = paste(Treatment,Time,sep="-")) %>%
ggplot(aes(x=Time,y=mean_total_cover,color=Treatment)) +
geom_point() +
geom_pointrange(aes(ymin=mean_total_cover-total_cover_se,ymax=mean_total_cover+total_cover_se)) +
theme_bw()
total_cover
#prevalence days
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size-se_epidemic_size,ymax=mean_epidemic_size+se_epidemic_size)) +
ylab("daphnia epidemic size (prevalence days)")
#infected individuals
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size_ind,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_ind-se_epidemic_size_ind,ymax=mean_epidemic_size_ind+se_epidemic_size_ind)) +
ylab("daphnia epidemic size (total inf individuals)")
#cerio
#prevalence days
ggplot(filter(summary_ep_ot,community=="CM"),aes(x=sample_date,y=mean_epidemic_size_c,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_c-se_epidemic_size_c,ymax=mean_epidemic_size_c+se_epidemic_size_c)) +
ylab("daphnia epidemic size (prevalence days)")
#infected individuals
#infected individuals
ggplot(filter(summary_ep_ot,community=="CM"),aes(x=sample_date,y=mean_epidemic_size_ind_c,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_ind_c-se_epidemic_size_ind_c,ymax=mean_epidemic_size_ind_c+se_epidemic_size_ind_c)) +
ylab("daphnia epidemic size (total inf individuals)")
#daphnia
#prevalence days
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size-se_epidemic_size,ymax=mean_epidemic_size+se_epidemic_size)) +
ylab("daphnia epidemic size (prevalence days)")
#prevalence days
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size-se_epidemic_size,ymax=mean_epidemic_size+se_epidemic_size)) +
ylab("daphnia epidemic size (prevalence days)")
#infected individuals
ggplot(filter(summary_ep_ot,community!="CM"),aes(x=sample_date,y=mean_epidemic_size_ind,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_ind-se_epidemic_size_ind,ymax=mean_epidemic_size_ind+se_epidemic_size_ind)) +
ylab("daphnia epidemic size (total inf individuals)")
#cerio
#prevalence days
ggplot(filter(summary_ep_ot,community=="CM"),aes(x=sample_date,y=mean_epidemic_size_c,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_c-se_epidemic_size_c,ymax=mean_epidemic_size_c+se_epidemic_size_c)) +
ylab("daphnia epidemic size (prevalence days)")
#infected individuals
ggplot(filter(summary_ep_ot,community=="CM"),aes(x=sample_date,y=mean_epidemic_size_ind_c,color=temp))+
geom_point()+facet_wrap(.~community)+theme_bw()+
geom_pointrange(aes(ymin=mean_epidemic_size_ind_c-se_epidemic_size_ind_c,ymax=mean_epidemic_size_ind_c+se_epidemic_size_ind_c)) +
ylab("daphnia epidemic size (total inf individuals)")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/2022-thermal-zoop-experiments")
meta <- read.csv("tank_metadata.csv")
counts <- read.csv("tank_counts.csv")
ysi <- read_csv("tank_ysi.csv")
ysi %<>% rename('temp_f' = '?F-21A104910', "do_per" = "DO %-21A106679", "do_conc" = "DO mg/L-21A106679",
"ph" = "pH-21B101988", "ph_mv" = "pH mV-21B101988", "chlor_rfu" = "Chlorophyll RFU-21B101736",
"chlor_conc" = "Chlorophyll ug/L-21B101736")
ysi %<>% mutate(bucket = as.factor(as.numeric(gsub("Tank ", "", Site))))
ysi %<>% mutate(temp_c = (temp_f-32)*(5/9))
ysi$Date <- mdy(ysi$Date)
meta$bucket <- as.factor(meta$bucket)
counts$bucket <- as.factor(counts$bucket)
data <- left_join(counts, meta, by = "bucket")
data$community <- as.factor(data$community)
data$sample_date <- mdy(data$sample_date)
data$zoop_date <- mdy(data$zoop_date)
data$spore_date <- mdy(data$spore_date)
data %<>% mutate(total = rowSums(across(juvenile_daphnia_uninf:cerio_inf),na.rm=T),
daphnia = rowSums(across(juvenile_daphnia_uninf:male_daphnia_inf),na.rm=T),
cerio = rowSums(across(cerio_uninf:cerio_inf)),
treatment = paste(community, temp, sep="_"),
daphnia_inf = rowSums(across(contains("daphnia_inf")),na.rm=T),
daphnia_sus = rowSums(across(contains("daphnia_uninf")),na.rm=T),
daphnia_prev = daphnia_inf/daphnia,
daphnia_inf_status = ifelse(daphnia_prev>0,"inf","uninf"),
cerio_prev = cerio_inf/cerio,
cerio_inf_status = ifelse(cerio_prev>0,"inf","uninf"),
d_ratio = daphnia/total,
juveniles = juvenile_daphnia_inf+juvenile_daphnia_uninf,
j_ratio = juveniles/daphnia)
#Time to try and get days between sample date and the start date
data %<>% mutate(days_since_hosts_added = as.Date(sample_date)-as.Date(zoop_date),
days_since_spores_added = as.Date(sample_date)-as.Date(spore_date))
#Set up another version of the data frame that has infected and susceptible Daphnia counts in one column for easier SI graphing
data_long <- pivot_longer(data,cols = c("daphnia_inf","daphnia_sus"),names_to="daphnia_SI_status",values_to="daphnia_SI_count")
ggplot(data,aes(x=sample_date,y=total, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + theme(legend.position = "none") + facet_grid(rows= vars(temp), cols = vars(community)) + theme_bw() + ylab("Total zoop density") + ggtitle("Total Zoop")
ggplot(data,aes(x=sample_date,y=daphnia, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Daphnia density") + ggtitle("Daphnia")
ggplot(filter(data,community=="CM"|community=="DCM"),aes(x=sample_date,y=cerio_uninf, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Cerio density") + ggtitle("Cerio")
ggplot(data,aes(x=sample_date,y=total, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + theme(legend.position = "none") + facet_grid(rows= vars(temp), cols = vars(community)) + theme_bw() + ylab("Total zoop density (log scale)") + ggtitle("Total Zoop") + scale_y_continuous(trans='log10')
ggplot(data,aes(x=sample_date,y=daphnia, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Daphnia density (log scale)") + ggtitle("Daphnia") + scale_y_continuous(trans='log10')
ggplot(filter(data,community=="CM"|community=="DCM"),aes(x=sample_date,y=cerio_uninf, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Cerio density (log scale)") + ggtitle("Cerio") + scale_y_continuous(trans='log10')
no_daphnia<- data %>% filter(community!="CM"&daphnia=="0")
unique(no_daphnia$bucket)
no_cerio <- data %>% filter(community=="CM"&cerio=="0")
unique(no_cerio$bucket)
#Make summary statistics for density after July 15
density_summary_omit <- data %>% filter(bucket!="22"|bucket!="23"|bucket!="26"|bucket!="30"|bucket!="43") %>% group_by(treatment) %>% summarize(mean_cerio_o = mean(cerio),
se_cerio = sqrt(var(cerio,na.rm=T)/n()),
mean_daphnia = mean(daphnia),
se_daphnia = sqrt(var(daphnia,na.rm=T)/n()))
contaminated_CM <- data %>% filter(community=="CM"&daphnia>2)
unique(contaminated_CM$bucket)
ggplot(filter(data,community!="CM"),aes(x=sample_date,y=daphnia, color=daphnia_inf_status))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Daphnia density") + ggtitle("Daphnia")
ggplot(filter(data,community=="CM"|community=="DCM"),aes(x=sample_date,y=cerio_uninf, color=cerio_inf_status))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Total Cerio density") + ggtitle("Cerio")
#Can do color as continuous prevalence but it's harder to see which buckets had infections
ggplot(data,aes(x=sample_date,y=daphnia_inf, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Daphnia Inf Individuals (log scale)") + ggtitle("Daphnia I") + scale_y_continuous(trans='log10')
ggplot(filter(data,community=="CM"|community=="DCM"),aes(x=sample_date,y=cerio_inf, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Cerio Inf Individuals (log scale)") + ggtitle("Cerio I") + scale_y_continuous(trans='log10')
#Cerio density vs cerio inf
ggplot(filter(data,community=="CM"&daphnia<=3),aes(x=cerio,y=cerio_inf,color=temp))+ geom_point() + scale_color_discrete() + facet_wrap(.~temp) +theme_bw() + ylab("Cerio Inf Individuals") + ggtitle("Cerio Inf/Density")
ggplot(data,aes(x=sample_date,y=daphnia_prev, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Daphnia Inf Prev (log scale)") + ggtitle("Daphnia Prev")+ scale_y_continuous(trans='log10')
ggplot(filter(data,community=="CM"|community=="DCM"),aes(x=sample_date,y=cerio_prev, color=temp))+ geom_point() + geom_line(aes(group = bucket)) + scale_color_discrete() + facet_grid(rows= vars(temp), cols = vars(community)) +theme_bw() + ylab("Cerio Inf Prev (log scale)") + ggtitle("Cerio Prev")+ scale_y_continuous(trans='log10')
#try filtering out 26 and 30 for 25 and var
summary <- data %>% group_by(treatment, sample_date) %>% summarize(mean_juvenile = mean(juvenile_daphnia_uninf),
se_juvenile_daphnia_uninf=sqrt(var(juvenile_daphnia_uninf,na.rm=T)/n()),
mean_adult = mean(adult_daphnia_uninf),
se_adult = sqrt(var(adult_daphnia_uninf,na.rm=T)/n()),
mean_cerio = mean(cerio_uninf),
se_cerio = sqrt(var(cerio_uninf,na.rm=T)/n()),
mean_daphnia = mean(daphnia),
se_daphnia = sqrt(var(daphnia,na.rm=T)/n()),
mean_total = mean(total),
se_total = sqrt(var(total,na.rm=T)/n()),
mean_daphnia_inf = mean(daphnia_inf),
se_daphnia_inf = sqrt(var(daphnia_inf,na.rm=T)/n()),
mean_cerio_inf = mean(cerio_inf),
se_cerio_inf = sqrt(var(cerio_inf,na.rm=T)/n()),
mean_daphnia_prev = mean(daphnia_prev),
se_daphnia_prev = sqrt(var(daphnia_prev,na.rm=T)/n()),
mean_cerio_prev = mean(cerio_prev),
se_cerio_prev = sqrt(var(cerio_prev,na.rm=T)/n()),
mean_d_ratio = mean(d_ratio),
se_d_ratio = sqrt(var(d_ratio,na.rm=T)/n()),
mean_j_ratio = mean(j_ratio),
se_j_ratio = sqrt(var(j_ratio,na.rm=T)/n()),
temp = temp,
community = community)
ggplot(summary,aes(x=temp,y=mean_total,color=community))+geom_point()+geom_pointrange(aes(ymin=mean_total-se_total,ymax=mean_total+se_total))+geom_line(aes(group=community))+facet_wrap(.~sample_date,nrow=2)+theme_bw()+ scale_y_continuous(trans='log10')+ylab("Total Zoop Density (log scale)")
ggplot(filter(summary,community!="CM"),aes(x=temp,y=mean_daphnia,color=community))+geom_point()+geom_pointrange(aes(ymin=mean_daphnia-se_daphnia,ymax=mean_daphnia+se_daphnia))+geom_line(aes(group=community))+facet_wrap(.~sample_date,nrow=2)+theme_bw()+ scale_y_continuous(trans='log10')+ylab("Total Daphnia Density (log scale)")
##By sample date
ggplot(filter(summary,community!="CM"),aes(x=sample_date,y=mean_daphnia,color=temp))+geom_point()+geom_pointrange(aes(ymin=mean_daphnia-se_daphnia,ymax=mean_daphnia+se_daphnia))+geom_line(aes(group=temp))+facet_wrap(.~community,nrow=1)+theme_bw()+ scale_y_continuous(trans='log10')+ylab("Total Daphnia Density (log scale)")
ggplot(filter(summary,community=="CM"|community=="DCM"),aes(x=temp,y=mean_cerio,color=community))+geom_point()+geom_pointrange(aes(ymin=mean_cerio-se_cerio,ymax=mean_cerio+se_cerio))+geom_line(aes(group=community))+facet_wrap(.~sample_date,nrow=2)+theme_bw()+ scale_y_continuous(trans='log10')+ylab("Total Cerio Density (log scale)")
#First visualize epidemics in each temperature and community treatment again - ignore CM for now
data %>% filter(days_since_spores_added>=0&community!="CM") %>% ggplot(.,aes(x=days_since_spores_added,y=daphnia_prev,color=temp))+geom_point()+geom_line(aes(group = bucket)) + facet_grid(rows= vars(temp), cols = vars(community))+theme_bw()
#To use trapz
library(pracma)
#Try it as a for loop ):
buckets <- unique(data$bucket)
epidemic_size_df <- data.frame(bucket <- buckets)
for (i in 1:length(buckets)){
sample_data <- data[data$bucket==buckets[i],]
#relevant extra info
epidemic_size_df$temp[i] <- as.character(sample_data$temp[1])
epidemic_size_df$community[i] <- as.character(sample_data$community[1])
epidemic_size_df$treatment[i] <- as.character(sample_data$treatment[1])
#now try to actually integrate
epidemic_size_df$epidemic_size[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$daphnia_prev)))
epidemic_size_df$epidemic_size_ind[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$daphnia_inf)))
#add cerio in
epidemic_size_df$epidemic_size_c[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$cerio_prev)))
epidemic_size_df$epidemic_size_ind_c[i] <- trapz(as.numeric(sample_data$days_since_spores_added),matrix(as.numeric(sample_data$cerio_inf)))
}
#making the epidemic_size_df nicer to work with
epidemic_size_df %<>% rename(bucket = bucket....buckets)
#raw data
ggplot(filter(epidemic_size_df,community!="CM"),aes(x=temp,y=epidemic_size,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()
ggplot(filter(epidemic_size_df,community!="CM"),aes(x=temp,y=epidemic_size_ind,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()
#summarized epidemic data
summary_ep <- filter(epidemic_size_df,bucket!="26"&bucket!="30"&bucket!="22"&bucket!="23"&bucket!="43") %>% group_by(treatment) %>% summarize(mean_epidemic_size = mean(epidemic_size,na.rm=T),
se_epidemic_size=sqrt(var(epidemic_size)/n()),
mean_epidemic_size_ind = mean(epidemic_size_ind,na.rm=T),
se_epidemic_size_ind=sqrt(var(epidemic_size_ind)/n()),
mean_epidemic_size_c = mean(epidemic_size_c,na.rm=T),
se_epidemic_size_c=sqrt(var(epidemic_size_c)/n()),
mean_epidemic_size_ind_c = mean(epidemic_size_ind_c,na.rm=T),
se_epidemic_size_ind_c=sqrt(var(epidemic_size_ind_c)/n()),
temp = unique(temp),
community = unique(community))
ggplot(filter(summary_ep,community!="CM"),aes(x=temp,y=mean_epidemic_size,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()+geom_pointrange(aes(ymin=mean_epidemic_size-se_epidemic_size,ymax=mean_epidemic_size+se_epidemic_size)) + ylab("daphnia epidemic size (prevalence days)")
ggplot(filter(summary_ep,community!="CM"),aes(x=temp,y=mean_epidemic_size_ind,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()+geom_pointrange(aes(ymin=mean_epidemic_size_ind-se_epidemic_size_ind,ymax=mean_epidemic_size_ind+se_epidemic_size_ind)) + ylab("epidemic size (total inf daphnia)")
ggplot(filter(summary_ep,community=="CM"|community=="DCM"),aes(x=temp,y=mean_epidemic_size_c,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()+geom_pointrange(aes(ymin=mean_epidemic_size_c-se_epidemic_size_c,ymax=mean_epidemic_size_c+se_epidemic_size_c)) + ylab("cerio epidemic size (prevalence days)")
ggplot(filter(summary_ep,community=="CM"|community=="DCM"),aes(x=temp,y=mean_epidemic_size_ind_c,color=temp))+geom_point()+facet_wrap(.~community)+theme_bw()+geom_pointrange(aes(ymin=mean_epidemic_size_ind_c-se_epidemic_size_ind_c,ymax=mean_epidemic_size_ind_c+se_epidemic_size_ind_c)) + ylab("total inf cerio")
data %>% filter(community=="DCM") %>% ggplot(., aes(x=sample_date,y=d_ratio, color = temp)) + geom_point() +geom_line(aes(group = bucket)) + facet_wrap(vars(temp))+theme_bw()
#D to C ratio graph for all temperature DCM buckets
ggplot(filter(summary,community=="DCM"),aes(x=temp,y=mean_d_ratio,color=temp))+geom_point()+geom_pointrange(aes(ymin=mean_d_ratio-se_d_ratio,ymax=mean_d_ratio+se_d_ratio))+facet_wrap(.~sample_date,nrow=1)+theme_bw()+xlab("Treatment")+ylab("Mean ratio of Daphnia to Ceriodaphnia")
#D to C ratio graph for just the 20 and var DCM buckets
#ggplot(filter(summary,community=="DCM"&(temp=="20"|temp=="var")),aes(x=temp,y=mean_d_ratio,color=temp))+geom_pointrange(aes(ymin=mean_d_ratio-se_d_ratio,ymax=mean_d_ratio+se_d_ratio))+facet_wrap(.~sample_date,nrow=1)+theme_bw()+xlab("Treatment")+ylab("Mean ratio of Daphnia to Ceriodaphnia")
ggplot(filter(summary,community=="DCM"&(temp=="20"|temp=="var")),aes(x=sample_date,y=mean_d_ratio,color=temp))+geom_pointrange(aes(ymin=mean_d_ratio-se_d_ratio,ymax=mean_d_ratio+se_d_ratio))+geom_line(aes(group=temp))+theme_bw()+xlab("Treatment")+ylab("Mean ratio of Daphnia to Ceriodaphnia")
#Infection Prevalence data
ggplot(filter(summary,community=="DCM"&(temp=="20"|temp=="var")),aes(x=sample_date,y=mean_daphnia_prev,color=temp))+geom_point()+geom_errorbar(aes(ymin=mean_daphnia_prev-se_daphnia_prev,ymax=mean_daphnia_prev+se_daphnia_prev),width=0.2)+geom_line(aes(group=temp))+theme_bw()+xlab("Treatment")+ylab("Mean inf prev")
ggplot(data, aes(x=sample_date, y=j_ratio, color = temp)) + geom_point() + geom_line(aes(group=bucket)) + facet_grid(rows= vars(temp), cols = vars(community))+theme_bw()
#Look at j_ratio for just D vs DM buckets
ggplot(filter(summary,community=="D"|community=="DM"),aes(x=sample_date,y=mean_j_ratio,color=community))+ geom_point() + geom_line(aes(group=community)) + geom_errorbar(aes(ymin=mean_j_ratio-se_j_ratio,ymax=mean_j_ratio+se_j_ratio),width=0.2) + facet_wrap(.~temp,nrow=2)
ggplot(filter(summary,community=="D"),aes(x=sample_date,y=mean_j_ratio,color=temp))+ geom_point() + geom_line(aes(group=temp)) + geom_errorbar(aes(ymin=mean_j_ratio-se_j_ratio,ymax=mean_j_ratio+se_j_ratio),width=0.2)+theme_bw()
View(data)
#first get data frame with density of daphnia and cerio before first infections (7/14)
density_epidemic <- data %>% filter(sample_date=="2022-07-14") %>% select(bucket,daphnia,cerio,treatment)
density_epidemic
#first get data frame with density of daphnia and cerio before first infections (7/14)
density_epidemic <- data %>% filter(sample_date=="2022-07-14") %>% select(sample_date,bucket,daphnia,cerio,treatment)
#first get data frame with density of daphnia and cerio before first infections (7/14)
density_epidemic
#first get data frame with density of daphnia and cerio before first infections (7/14)
density_epidemic <- data %>% filter(sample_date=="2022-07-14") %>% select(sample_date,bucket,daphnia,cerio,treatment) %>% left_join(epidemic_size_df,by="bucket")
density_epidemic
ggplot(density_epidemic,aes(x=daphnia,y=epidemic_size,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community!="CM"|community!="D"),aes(x=daphnia,y=epidemic_size,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community!="CM"&community!="D"),aes(x=daphnia,y=epidemic_size,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community!="CM"&community!="D"),aes(x=daphnia,y=epidemic_size_ind,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community=="CM"|community=="DCM"),aes(x=cerio,y=epidemic_size_c,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community=="CM"|community=="DCM"),aes(x=cerio,y=epidemic_size_ind_c,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
#remove buckets that bottomed out
density_epidemic <- filter(density_epidemic,bucket!=c("22","23","26","30","43"))
#remove buckets that bottomed out
density_epidemic <- filter(density_epidemic,bucket!="22",bucket!="23"|bucket!="26"|bucket!="30"|bucket!="43")
mic <- filter(density_epidemic,bucket!="22",bucket!="23"|bucket!="26"|bucket!="30"|bucket!="43")
ggplot(filter
ggplot(filter(density_epidemic,community!="CM"&community!="D"),aes(x=daphnia,y=epidemic_size,color=temp))+
ggplot(filter(density_epidemic,community!="CM"&community!="D"),aes(x=daphnia,y=epidemic_size_ind,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
ggplot(filter(density_epidemic,community=="CM"|community=="DCM"),aes(x=cerio,y=epidemic_size_c,color=temp))+
geom_point()+
theme_bw()+
facet_wrap(.~community)
install.packages("deSolve")
library(deSolve)
